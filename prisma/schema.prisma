datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id               Int      @id @default(autoincrement())
  uid              String   @unique
  photoURL         String? // 使っていない_20240212
  displayName      String?  @map("display_name")
  stripeCustomerId String?  @map("stripe_customer_id")
  university       String?
  faculty          String?
  department       String?
  createdAt        DateTime @default(now()) @map("created_at")
  updatedAt        DateTime @updatedAt @map("updated_at")

  products Product[]
  matches  Match[]
  messages Message[]

  @@map("users")
}

model Product {
  id Int @id @default(autoincrement())

  stripePriceId   String  @map("stripe_price_id")
  stripeProductId String  @map("stripe_product_id")
  name            String
  price           Int
  active          Boolean
  description     String  @db.Text
  paymentMethod   String? @map("payment_method")
  status          String

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  user   User @relation(fields: [userId], references: [id])
  userId Int  @map("user_id")

  categories Category[]
  images     Image[]

  @@index([userId])
  @@map("products")
}

model Image {
  id   Int    @id @default(autoincrement())
  name String
  src  String

  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId Int     @map("product_id")

  @@index([productId])
  @@map("images")
}

model Category {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  products Product[]

  @@map("categories")
}

// 中間テーブル（明示的なfkなしで作成）
model Match {
  id       Int       @id @default(autoincrement())
  users    User[]
  messages Message[]
  name     String

  @@map("matches")
}

// 中間テーブル（明示的なfkありで作成）
model Message {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int // relation scalar field (used in the `@relation` attribute above)
  match     Match    @relation(fields: [matchId], references: [id])
  matchId   Int // relation scalar field (used in the `@relation` attribute above)
  message   String   @db.Text
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@index([userId])
  @@index([matchId])
  @@map("messages")
}
