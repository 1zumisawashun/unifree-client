datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id               Int      @id @default(autoincrement())
  stripeCustomerId String?  @map("stripe_customer_id")
  name             String?
  university       String?
  faculty          String?
  department       String?
  createdAt        DateTime @default(now()) @map("created_at")
  updatedAt        DateTime @updatedAt @map("updated_at")

  products Product[]
  matches  Match[]
  messages Message[]

  @@map("users")
}

model Product {
  id              Int      @id @default(autoincrement())
  stripePriceId   String   @map("stripe_price_id")
  stripeProductId String   @map("stripe_product_id")
  name            String
  price           Int
  active          Boolean
  description     String
  paymentMethod   String   @map("payment_method")
  status          String
  images          Image[]
  createdAt       DateTime @default(now()) @map("created_at")
  updatedAt       DateTime @updatedAt @map("updated_at")

  user   User @relation(fields: [userId], references: [id])
  userId Int  @unique @map("user_id")

  categories CategoriesOnProducts[]

  @@map("products")
}

model Image {
  id   Int    @id @default(autoincrement())
  name String
  src  String

  product   Product @relation(fields: [productId], references: [id])
  productId Int     @unique @map("product_id")
}

model Category {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  products CategoriesOnProducts[]

  @@map("categories")
}

model CategoriesOnProducts {
  product    Product  @relation(fields: [productId], references: [id])
  productId  Int // relation scalar field (used in the `@relation` attribute above)
  category   Category @relation(fields: [categoryId], references: [id])
  categoryId Int // relation scalar field (used in the `@relation` attribute above)

  @@id([productId, categoryId])
  @@index([productId])
  @@index([categoryId])
}

model Match {
  id       Int       @id @default(autoincrement())
  users    User[]
  messages Message[]

  @@map("matches")
}

model Message {
  user    User   @relation(fields: [userId], references: [id])
  userId  Int // relation scalar field (used in the `@relation` attribute above)
  match   Match  @relation(fields: [matchId], references: [id])
  matchId Int // relation scalar field (used in the `@relation` attribute above)
  message String

  @@id([userId, matchId])
  @@index([userId])
  @@index([matchId])
  @@map("messages")
}
